name: code

on: [push]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v3
      - name: using node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install, lint, and build
        run: |
          yarn install
          yarn lint
          yarn build
  test_unit:
    name: test unit
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v3
      - name: using node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install
        run: yarn install
      - name: yarn test:unit
        run: yarn test:unit
  test_integration:
    name: test integration
    runs-on: ubuntu-latest
    container: minddocdev/node-alpine-ci:latest
    needs:
      - build
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v3
      - name: using node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn install
        run: yarn install
      - name: yarn test:integration:ci
        run: yarn test:integration:ci
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: express
          POSTGRES_PASSWORD: masterkey
          POSTGRES_USER: admin
        ports:
          - 5432:5432
        options: " --health-cmd pg_isready --health-interval 5s --health-timeout 5s --health-retries 10 "
    env:
      TYPEORM_HOST: postgres
      TYPEORM_PORT: 5432
      TYPEORM_DATABASE: express
      TYPEORM_SCHEMA: public
